{"ast":null,"code":"var _jsxFileName = \"/Users/kasimakram/Downloads/HShacks/client/src/Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '700px',\n  height: '800px'\n};\nconst generateEvents = center => {\n  const categories = [\"Community Cleanup\", \"Food Bank Assistance\", \"Senior Support\", \"Youth Mentoring\", \"Animal Shelter Help\"];\n  const names = [\"Manny's\", \"Jeoffy's\", \"Alice's\", \"Bob's\", \"Cara's\", \"Derek's\", \"Eliza's\", \"Fred's\", \"Gina's\", \"Xi's\", \"Ashwagandha's\", \"HSHacks's\"];\n  const addDaysToDate = (date, days) => {\n    const result = new Date(date);\n    result.setDate(result.getDate() + days);\n    return result;\n  };\n  const today = new Date();\n  const events = categories.flatMap(category => {\n    const randomName = names[Math.floor(Math.random() * names.length)];\n    const randomDays = Math.floor(Math.random() * 6) + 1; // Generate 1 to 6 days to ensure it's not today\n    const eventDate = addDaysToDate(today, randomDays).toLocaleDateString('en-US', {\n      weekday: 'long',\n      month: 'long',\n      day: 'numeric',\n      year: 'numeric'\n    });\n    return {\n      name: `${randomName} ${category}`,\n      category,\n      date: eventDate,\n      location: {\n        lat: center.lat + Math.random() * 0.016,\n        // Randomly within ~0.5 miles\n        lng: center.lng + Math.random() * 0.016\n      }\n    };\n  });\n  return events;\n};\nconst Search = ({\n  selectedVolunteeringOptions\n}) => {\n  _s();\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [statusUI, showStatusUI] = useState(true);\n  const [fadeOut, setFadeOut] = useState(false);\n  const [events, setEvents] = useState([]);\n  const [map, setMap] = useState(null);\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyClSmoUtoTchbsocJmVoUSbXfwWHFCoPOo\"\n  });\n  useEffect(() => {\n    if (!selectedVolunteeringOptions || !currentLocation) return; // Ensure currentLocation is not null\n    const allEvents = generateEvents(currentLocation);\n    const filteredEvents = allEvents.filter(event => selectedVolunteeringOptions.includes(event.category));\n    const sortedEvents = filteredEvents.sort((a, b) => {\n      const distA = Math.hypot(currentLocation.lat - a.location.lat, currentLocation.lng - a.location.lng);\n      const distB = Math.hypot(currentLocation.lat - b.location.lat, currentLocation.lng - b.location.lng);\n      return distA - distB;\n    });\n    setEvents(sortedEvents);\n  }, [selectedVolunteeringOptions, currentLocation]); // Include currentLocation in the dependency array\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const pos = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        setCurrentLocation(pos);\n      }, error => {\n        console.error('Geolocation failed: ', error);\n      });\n    }\n  }, []);\n  const onLoad = useCallback(function callback(map) {\n    setMap(map);\n  }, []);\n  const onUnmount = useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  if (!selectedVolunteeringOptions || !currentLocation) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this); // Simple loading text, replace with a loading spinner or animation if preferred\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"centerMainDiv\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchMainDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchListStyle\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Events Near You\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event-list-container\",\n          children: currentLocation && events.map((event, index) => {\n            const distanceInMiles = Math.hypot(currentLocation.lat - event.location.lat, currentLocation.lng - event.location.lng) * 69;\n            const distance = distanceInMiles < 1 ? distanceInMiles.toFixed(1) : Math.round(distanceInMiles);\n            const distanceText = `${distance} ${distance === 1 ? 'mile' : 'miles'} away`;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"event-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"event-name\",\n                children: event === null || event === void 0 ? void 0 : event.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"event-date\",\n                children: event === null || event === void 0 ? void 0 : event.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"event-details\",\n                children: distanceText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), isLoaded && currentLocation && /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: currentLocation,\n        zoom: 15.25 // closer zoom to show events within about a mile\n        ,\n        onLoad: onLoad,\n        onUnmount: onUnmount,\n        children: events.map((event, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: event.location,\n          label: event.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"a5ONSxISE+nuuLnWcg20jlhIUkY=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","GoogleMap","Marker","useJsApiLoader","jsxDEV","_jsxDEV","containerStyle","width","height","generateEvents","center","categories","names","addDaysToDate","date","days","result","Date","setDate","getDate","today","events","flatMap","category","randomName","Math","floor","random","length","randomDays","eventDate","toLocaleDateString","weekday","month","day","year","name","location","lat","lng","Search","selectedVolunteeringOptions","_s","currentLocation","setCurrentLocation","statusUI","showStatusUI","fadeOut","setFadeOut","setEvents","map","setMap","isLoaded","id","googleMapsApiKey","allEvents","filteredEvents","filter","event","includes","sortedEvents","sort","a","b","distA","hypot","distB","navigator","geolocation","getCurrentPosition","position","pos","coords","latitude","longitude","error","console","onLoad","callback","onUnmount","children","fileName","_jsxFileName","lineNumber","columnNumber","className","index","distanceInMiles","distance","toFixed","round","distanceText","mapContainerStyle","zoom","label","_c","$RefreshReg$"],"sources":["/Users/kasimakram/Downloads/HShacks/client/src/Search.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';\n\nconst containerStyle = {\n    width: '700px',\n    height: '800px'\n};\nconst generateEvents = (center) => {\n    const categories = [\n        \"Community Cleanup\",\n        \"Food Bank Assistance\",\n        \"Senior Support\",\n        \"Youth Mentoring\",\n        \"Animal Shelter Help\"\n    ];\n\n    const names = [\n        \"Manny's\",\n        \"Jeoffy's\",\n        \"Alice's\",\n        \"Bob's\",\n        \"Cara's\",\n        \"Derek's\",\n        \"Eliza's\",\n        \"Fred's\",\n        \"Gina's\",\n        \"Xi's\",\n        \"Ashwagandha's\",\n        \"HSHacks's\"\n    ];\n\n    const addDaysToDate = (date, days) => {\n        const result = new Date(date);\n        result.setDate(result.getDate() + days);\n        return result;\n    };\n\n    const today = new Date();\n\n    const events = categories.flatMap(category => {\n        const randomName = names[Math.floor(Math.random() * names.length)];\n        const randomDays = Math.floor(Math.random() * 6) + 1; // Generate 1 to 6 days to ensure it's not today\n        const eventDate = addDaysToDate(today, randomDays).toLocaleDateString('en-US', {\n            weekday: 'long', month: 'long', day: 'numeric', year: 'numeric'\n        });\n\n        return {\n            name: `${randomName} ${category}`,\n            category,\n            date: eventDate,\n            location: {\n                lat: center.lat + (Math.random() * 0.016), // Randomly within ~0.5 miles\n                lng: center.lng + (Math.random() * 0.016)\n            }\n        };\n    });\n\n    return events;\n};\n\n\n\n\nconst Search = ({ selectedVolunteeringOptions }) => {\n    const [currentLocation, setCurrentLocation] = useState(null);\n    const [statusUI, showStatusUI] = useState(true);\n    const [fadeOut, setFadeOut] = useState(false);\n    const [events, setEvents] = useState([]);\n    const [map, setMap] = useState(null);\n\n    const { isLoaded } = useJsApiLoader({\n        id: 'google-map-script',\n        googleMapsApiKey: \"AIzaSyClSmoUtoTchbsocJmVoUSbXfwWHFCoPOo\"\n    });\n\n    useEffect(() => {\n        if (!selectedVolunteeringOptions || !currentLocation) return; // Ensure currentLocation is not null\n        const allEvents = generateEvents(currentLocation);\n        const filteredEvents = allEvents.filter(event => selectedVolunteeringOptions.includes(event.category));\n        const sortedEvents = filteredEvents.sort((a, b) => {\n            const distA = Math.hypot(currentLocation.lat - a.location.lat, currentLocation.lng - a.location.lng);\n            const distB = Math.hypot(currentLocation.lat - b.location.lat, currentLocation.lng - b.location.lng);\n            return distA - distB;\n        });\n        setEvents(sortedEvents);\n    }, [selectedVolunteeringOptions, currentLocation]); // Include currentLocation in the dependency array\n    \n\n\n    useEffect(() => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                position => {\n                    const pos = {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude\n                    };\n                    setCurrentLocation(pos);\n                },\n                error => {\n                    console.error('Geolocation failed: ', error);\n                }\n            );\n        }\n    }, []);\n\n    const onLoad = useCallback(function callback(map) {\n        setMap(map);\n    }, []);\n\n    const onUnmount = useCallback(function callback(map) {\n        setMap(null);\n    }, []);\n\n    if (!selectedVolunteeringOptions || !currentLocation) {\n        return (\n        <div>Loading...</div>); // Simple loading text, replace with a loading spinner or animation if preferred\n    }\n\n    return (\n        <div className='centerMainDiv'>\n            <div className='searchMainDiv'>\n                <div className='searchListStyle'>\n                    <h2>Events Near You</h2>\n                    <div className=\"event-list-container\">\n                        {currentLocation && events.map((event, index) => {\n                            const distanceInMiles = Math.hypot(currentLocation.lat - event.location.lat, currentLocation.lng - event.location.lng) * 69;\n                            const distance = distanceInMiles < 1 ? distanceInMiles.toFixed(1) : Math.round(distanceInMiles);\n                            const distanceText = `${distance} ${distance === 1 ? 'mile' : 'miles'} away`;\n                            return (\n                                <div key={index} className=\"event-card\">\n                                    <div className=\"event-name\">{event?.name}</div>\n                                    <div className=\"event-date\">{event?.date}</div>\n                                    <div className=\"event-details\">{distanceText}</div>\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n                {isLoaded && currentLocation && (\n                    <GoogleMap\n                        mapContainerStyle={containerStyle}\n                        center={currentLocation}\n                        zoom={15.25} // closer zoom to show events within about a mile\n                        onLoad={onLoad}\n                        onUnmount={onUnmount}\n                    >\n                        {events.map((event, index) => (\n                            <Marker key={index} position={event.location} label={event.name} />\n                        ))}\n                    </GoogleMap>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default Search;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}