{"ast":null,"code":"var _jsxFileName = \"/Users/kasimakram/Downloads/HShacks/client/src/Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { errorExplinationMark } from './Icons';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '400px',\n  height: '400px'\n};\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\nconst Search = ({\n  selectedVolunteeringOptions,\n  setSelectedVolunteeringOptions\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const redirectToHomePage = () => navigate('/');\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [locations, setLocations] = useState([]);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setCurrentLocation({\n        lat: latitude,\n        lng: longitude\n      });\n      // Here you would also fetch and set locations related to the volunteering options\n    }, error => {\n      console.error('Error getting location', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"YOUR_API_KEY\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n          mapContainerStyle: containerStyle,\n          center: center,\n          zoom: 10,\n          children: /*#__PURE__*/_jsxDEV(Marker, {\n            position: center\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"zrUTi4b9KGeQ6NKQZgH53Qguw3s=\", false, function () {\n  return [useNavigate];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","errorExplinationMark","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","Search","selectedVolunteeringOptions","setSelectedVolunteeringOptions","_s","navigate","redirectToHomePage","currentLocation","setCurrentLocation","locations","setLocations","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","error","console","googleMapsApiKey","children","className","fileName","_jsxFileName","lineNumber","columnNumber","mapContainerStyle","zoom","_c","$RefreshReg$"],"sources":["/Users/kasimakram/Downloads/HShacks/client/src/Search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { errorExplinationMark } from './Icons';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '400px',\n  height: '400px'\n};\n\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\n\nconst Search = ({ selectedVolunteeringOptions, setSelectedVolunteeringOptions }) => {\n    const navigate = useNavigate();\n    const redirectToHomePage = () => navigate('/');\n    const [currentLocation, setCurrentLocation] = useState(null);\n    const [locations, setLocations] = useState([]);\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition(\n            position => {\n                const { latitude, longitude } = position.coords;\n                setCurrentLocation({ lat: latitude, lng: longitude });\n                // Here you would also fetch and set locations related to the volunteering options\n            },\n            error => {\n                console.error('Error getting location', error);\n            }\n        );\n    }, []);\n\n    return (\n        <LoadScript\n            googleMapsApiKey=\"YOUR_API_KEY\">\n            <div className=\"search-container\">\n                <div className=\"location-list\">\n                    {/* List of locations sorted by distance */}\n                </div>\n                <div className=\"map-container\">\n                    <GoogleMap\n                        mapContainerStyle={containerStyle}\n                        center={center}\n                        zoom={10}\n                    >\n                        {/* Assuming you have multiple locations, you'd map over them and create a Marker for each */}\n                        <Marker position={center} />\n                    </GoogleMap>\n                </div>\n            </div>\n        </LoadScript>\n    );\n};\n\nexport default Search;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,oBAAoB,QAAQ,SAAS;AAC9C,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,CAAC,KAAK;EACXC,GAAG,EAAE,CAAC;AACR,CAAC;AAED,MAAMC,MAAM,GAAGA,CAAC;EAAEC,2BAA2B;EAAEC;AAA+B,CAAC,KAAK;EAAAC,EAAA;EAChF,MAAMC,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAC9B,MAAMkB,kBAAkB,GAAGA,CAAA,KAAMD,QAAQ,CAAC,GAAG,CAAC;EAC9C,MAAM,CAACE,eAAe,EAAEC,kBAAkB,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZwB,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACpCC,QAAQ,IAAI;MACR,MAAM;QAAEC,QAAQ;QAAEC;MAAU,CAAC,GAAGF,QAAQ,CAACG,MAAM;MAC/CT,kBAAkB,CAAC;QAAET,GAAG,EAAEgB,QAAQ;QAAEf,GAAG,EAAEgB;MAAU,CAAC,CAAC;MACrD;IACJ,CAAC,EACDE,KAAK,IAAI;MACLC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD,CACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIxB,OAAA,CAACH,UAAU;IACP6B,gBAAgB,EAAC,cAAc;IAAAC,QAAA,eAC/B3B,OAAA;MAAK4B,SAAS,EAAC,kBAAkB;MAAAD,QAAA,gBAC7B3B,OAAA;QAAK4B,SAAS,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEzB,CAAC,eACNhC,OAAA;QAAK4B,SAAS,EAAC,eAAe;QAAAD,QAAA,eAC1B3B,OAAA,CAACJ,SAAS;UACNqC,iBAAiB,EAAEhC,cAAe;UAClCG,MAAM,EAAEA,MAAO;UACf8B,IAAI,EAAE,EAAG;UAAAP,QAAA,eAGT3B,OAAA,CAACF,MAAM;YAACsB,QAAQ,EAAEhB;UAAO;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAErB,CAAC;AAACtB,EAAA,CAvCIH,MAAM;EAAA,QACSb,WAAW;AAAA;AAAAyC,EAAA,GAD1B5B,MAAM;AAyCZ,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}