{"ast":null,"code":"var _jsxFileName = \"/Users/kasimakram/Downloads/HShacks/client/src/Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { errorExplinationMark } from './Icons';\nimport { GoogleMap, LoadScript, Marker, useJsApiLoader } from '@react-google-maps/api';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '400px',\n  height: '400px'\n};\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\nconst Search = ({\n  selectedVolunteeringOptions,\n  setSelectedVolunteeringOptions\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const redirectToHomePage = () => navigate('/');\n  const [map, setMap] = React.useState(null);\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"YOUR_API_KEY\"\n  });\n  const onLoad = React.useCallback(function callback(map) {\n    // This is just an example of getting and using the map instance!!! don't just blindly copy!\n    const bounds = new window.google.maps.LatLngBounds(center);\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 10,\n    onLoad: onLoad,\n    onUnmount: onUnmount,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Search, \"nRVz8gXVDDErgB1wRLM8xXrB+B4=\", false, function () {\n  return [useNavigate, useJsApiLoader];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","errorExplinationMark","GoogleMap","LoadScript","Marker","useJsApiLoader","Fragment","_Fragment","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","Search","selectedVolunteeringOptions","setSelectedVolunteeringOptions","_s","navigate","redirectToHomePage","map","setMap","isLoaded","id","googleMapsApiKey","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","mapContainerStyle","zoom","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kasimakram/Downloads/HShacks/client/src/Search.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { errorExplinationMark } from './Icons';\nimport { GoogleMap, LoadScript, Marker, useJsApiLoader } from '@react-google-maps/api';\n\nconst containerStyle = {\n    width: '400px',\n    height: '400px'\n};\n\nconst center = {\n    lat: -3.745,\n    lng: -38.523\n};\n\n\nconst Search = ({ selectedVolunteeringOptions, setSelectedVolunteeringOptions }) => {\n    const navigate = useNavigate();\n    const redirectToHomePage = () => navigate('/');\n    const [map, setMap] = React.useState(null)\n\n\n\n\n    const { isLoaded } = useJsApiLoader({\n        id: 'google-map-script',\n        googleMapsApiKey: \"YOUR_API_KEY\"\n    })\n\n    const onLoad = React.useCallback(function callback(map) {\n        // This is just an example of getting and using the map instance!!! don't just blindly copy!\n        const bounds = new window.google.maps.LatLngBounds(center);\n        map.fitBounds(bounds);\n\n        setMap(map)\n    }, [])\n\n    const onUnmount = React.useCallback(function callback(map) {\n        setMap(null)\n    }, [])\n\n\n\n    return isLoaded ? (\n        <GoogleMap\n            mapContainerStyle={containerStyle}\n            center={center}\n            zoom={10}\n            onLoad={onLoad}\n            onUnmount={onUnmount}\n        >\n            { /* Child components, such as markers, info windows, etc. */}\n            <></>\n        </GoogleMap>\n    ) : <></>\n}\n\nexport default Search;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,oBAAoB,QAAQ,SAAS;AAC9C,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,EAAEC,cAAc,QAAQ,wBAAwB;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAEvF,MAAMC,cAAc,GAAG;EACnBC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,MAAM,GAAG;EACXC,GAAG,EAAE,CAAC,KAAK;EACXC,GAAG,EAAE,CAAC;AACV,CAAC;AAGD,MAAMC,MAAM,GAAGA,CAAC;EAAEC,2BAA2B;EAAEC;AAA+B,CAAC,KAAK;EAAAC,EAAA;EAChF,MAAMC,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAC9B,MAAMqB,kBAAkB,GAAGA,CAAA,KAAMD,QAAQ,CAAC,GAAG,CAAC;EAC9C,MAAM,CAACE,GAAG,EAAEC,MAAM,CAAC,GAAG1B,KAAK,CAACC,QAAQ,CAAC,IAAI,CAAC;EAK1C,MAAM;IAAE0B;EAAS,CAAC,GAAGnB,cAAc,CAAC;IAChCoB,EAAE,EAAE,mBAAmB;IACvBC,gBAAgB,EAAE;EACtB,CAAC,CAAC;EAEF,MAAMC,MAAM,GAAG9B,KAAK,CAAC+B,WAAW,CAAC,SAASC,QAAQA,CAACP,GAAG,EAAE;IACpD;IACA,MAAMQ,MAAM,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,YAAY,CAACrB,MAAM,CAAC;IAC1DS,GAAG,CAACa,SAAS,CAACL,MAAM,CAAC;IAErBP,MAAM,CAACD,GAAG,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,SAAS,GAAGvC,KAAK,CAAC+B,WAAW,CAAC,SAASC,QAAQA,CAACP,GAAG,EAAE;IACvDC,MAAM,CAAC,IAAI,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAIN,OAAOC,QAAQ,gBACXf,OAAA,CAACP,SAAS;IACNmC,iBAAiB,EAAE3B,cAAe;IAClCG,MAAM,EAAEA,MAAO;IACfyB,IAAI,EAAE,EAAG;IACTX,MAAM,EAAEA,MAAO;IACfS,SAAS,EAAEA,SAAU;IAAAG,QAAA,eAGrB9B,OAAA,CAAAF,SAAA,mBAAI;EAAC;IAAAiC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC,gBACZlC,OAAA,CAAAF,SAAA,mBAAI,CAAC;AACb,CAAC;AAAAY,EAAA,CAvCKH,MAAM;EAAA,QACShB,WAAW,EAOPK,cAAc;AAAA;AAAAuC,EAAA,GARjC5B,MAAM;AAyCZ,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}