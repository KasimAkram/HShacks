{"ast":null,"code":"var _jsxFileName = \"/Users/kasimakram/Downloads/HShacks/client/src/Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  // Full width of the container for better responsiveness\n  height: '800px'\n};\nconst layoutStyle = {\n  display: 'flex',\n  flexDirection: 'row'\n};\nconst listStyle = {\n  width: '300px',\n  // Width of the list\n  overflowY: 'auto',\n  // Enable scrolling\n  height: '800px',\n  // Match the map height\n  padding: '20px',\n  boxSizing: 'border-box'\n};\nconst Search = ({\n  selectedVolunteeringOptions,\n  setSelectedVolunteeringOptions\n}) => {\n  _s();\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [charities, setCharities] = useState([]);\n  const [map, setMap] = useState(null);\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyClSmoUtoTchbsocJmVoUSbXfwWHFCoPOo\"\n  });\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const pos = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        setCurrentLocation(pos);\n        fetchNearbyCharities(pos);\n      }, error => {\n        console.error('Geolocation failed: ', error);\n        alert('Failed to retrieve your location. Please ensure location services are enabled and try again.');\n        // Optionally set a fallback location\n        setCurrentLocation({\n          lat: 40.7128,\n          lng: -74.0060\n        }); // Example: New York City\n      });\n    } else {\n      alert('Geolocation is not supported by this browser.');\n    }\n  }, []);\n  const fetchNearbyCharities = useCallback(location => {\n    const exampleCharities = [{\n      name: \"Charity A\",\n      location: {\n        lat: location.lat + 0.01,\n        lng: location.lng + 0.01\n      }\n    }, {\n      name: \"Charity B\",\n      location: {\n        lat: location.lat - 0.02,\n        lng: location.lng - 0.02\n      }\n    }\n    // More charities\n    ];\n    const sortedCharities = exampleCharities.sort((a, b) => {\n      const distA = Math.hypot(location.lat - a.location.lat, location.lng - a.location.lng);\n      const distB = Math.hypot(location.lat - b.location.lat, location.lng - b.location.lng);\n      return distA - distB;\n    });\n    setCharities(sortedCharities);\n  }, []);\n  const onLoad = useCallback(function callback(map) {\n    setMap(map);\n  }, []);\n  const onUnmount = useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: layoutStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: listStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Charities Near You\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: charities.map((charity, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: charity.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), \" - Approx distance: \", Math.round(charity.distance * 1000), \" meters\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isLoaded && currentLocation ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: currentLocation,\n        zoom: 15.25,\n        onLoad: onLoad,\n        onUnmount: onUnmount,\n        children: charities.map((charity, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: charity.location,\n          label: charity.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"YTYDYIQ0JNNJaKaiglj3JUXx/1Y=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","GoogleMap","Marker","useJsApiLoader","jsxDEV","_jsxDEV","containerStyle","width","height","layoutStyle","display","flexDirection","listStyle","overflowY","padding","boxSizing","Search","selectedVolunteeringOptions","setSelectedVolunteeringOptions","_s","currentLocation","setCurrentLocation","charities","setCharities","map","setMap","isLoaded","id","googleMapsApiKey","navigator","geolocation","getCurrentPosition","position","pos","lat","coords","latitude","lng","longitude","fetchNearbyCharities","error","console","alert","location","exampleCharities","name","sortedCharities","sort","a","b","distA","Math","hypot","distB","onLoad","callback","onUnmount","style","children","fileName","_jsxFileName","lineNumber","columnNumber","charity","index","round","distance","mapContainerStyle","center","zoom","label","_c","$RefreshReg$"],"sources":["/Users/kasimakram/Downloads/HShacks/client/src/Search.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';\n\nconst containerStyle = {\n    width: '100%', // Full width of the container for better responsiveness\n    height: '800px'\n};\n\nconst layoutStyle = {\n    display: 'flex',\n    flexDirection: 'row'\n};\n\nconst listStyle = {\n    width: '300px', // Width of the list\n    overflowY: 'auto', // Enable scrolling\n    height: '800px', // Match the map height\n    padding: '20px',\n    boxSizing: 'border-box'\n};\n\nconst Search = ({ selectedVolunteeringOptions, setSelectedVolunteeringOptions }) => {\n    const [currentLocation, setCurrentLocation] = useState(null);\n    const [charities, setCharities] = useState([]);\n    const [map, setMap] = useState(null);\n\n    const { isLoaded } = useJsApiLoader({\n        id: 'google-map-script',\n        googleMapsApiKey: \"AIzaSyClSmoUtoTchbsocJmVoUSbXfwWHFCoPOo\"\n    });\n\n    useEffect(() => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                position => {\n                    const pos = {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude\n                    };\n                    setCurrentLocation(pos);\n                    fetchNearbyCharities(pos);\n                },\n                error => {\n                    console.error('Geolocation failed: ', error);\n                    alert('Failed to retrieve your location. Please ensure location services are enabled and try again.');\n                    // Optionally set a fallback location\n                    setCurrentLocation({ lat: 40.7128, lng: -74.0060 }); // Example: New York City\n                }\n            );\n        } else {\n            alert('Geolocation is not supported by this browser.');\n        }\n    }, []);\n    \n\n    const fetchNearbyCharities = useCallback((location) => {\n        const exampleCharities = [\n            { name: \"Charity A\", location: { lat: location.lat + 0.01, lng: location.lng + 0.01 } },\n            { name: \"Charity B\", location: { lat: location.lat - 0.02, lng: location.lng - 0.02 } },\n            // More charities\n        ];\n        const sortedCharities = exampleCharities.sort((a, b) => {\n            const distA = Math.hypot(location.lat - a.location.lat, location.lng - a.location.lng);\n            const distB = Math.hypot(location.lat - b.location.lat, location.lng - b.location.lng);\n            return distA - distB;\n        });\n        setCharities(sortedCharities);\n    }, []);\n\n    const onLoad = useCallback(function callback(map) {\n        setMap(map);\n    }, []);\n\n    const onUnmount = useCallback(function callback(map) {\n        setMap(null);\n    }, []);\n\n    return (\n        <div style={layoutStyle}>\n            <div style={listStyle}>\n                <h2>Charities Near You</h2>\n                <ul>\n                    {charities.map((charity, index) => (\n                        <li key={index}>\n                            <strong>{charity.name}</strong> - Approx distance: {Math.round(charity.distance * 1000)} meters\n                        </li>\n                    ))}\n                </ul>\n            </div>\n            <div>\n                {isLoaded && currentLocation ? (\n                    <GoogleMap\n                        mapContainerStyle={containerStyle}\n                        center={currentLocation}\n                        zoom={15.25}\n                        onLoad={onLoad}\n                        onUnmount={onUnmount}\n                    >\n                        {charities.map((charity, index) => (\n                            <Marker key={index} position={charity.location} label={charity.name} />\n                        ))}\n                    </GoogleMap>\n                ) : <div>Loading...</div>}\n            </div>\n        </div>\n    );\n}\n\nexport default Search;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,SAAS,EAAEC,MAAM,EAAEC,cAAc,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3E,MAAMC,cAAc,GAAG;EACnBC,KAAK,EAAE,MAAM;EAAE;EACfC,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,WAAW,GAAG;EAChBC,OAAO,EAAE,MAAM;EACfC,aAAa,EAAE;AACnB,CAAC;AAED,MAAMC,SAAS,GAAG;EACdL,KAAK,EAAE,OAAO;EAAE;EAChBM,SAAS,EAAE,MAAM;EAAE;EACnBL,MAAM,EAAE,OAAO;EAAE;EACjBM,OAAO,EAAE,MAAM;EACfC,SAAS,EAAE;AACf,CAAC;AAED,MAAMC,MAAM,GAAGA,CAAC;EAAEC,2BAA2B;EAAEC;AAA+B,CAAC,KAAK;EAAAC,EAAA;EAChF,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC0B,GAAG,EAAEC,MAAM,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAEpC,MAAM;IAAE4B;EAAS,CAAC,GAAGvB,cAAc,CAAC;IAChCwB,EAAE,EAAE,mBAAmB;IACvBC,gBAAgB,EAAE;EACtB,CAAC,CAAC;EAEF7B,SAAS,CAAC,MAAM;IACZ,IAAI8B,SAAS,CAACC,WAAW,EAAE;MACvBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACpCC,QAAQ,IAAI;QACR,MAAMC,GAAG,GAAG;UACRC,GAAG,EAAEF,QAAQ,CAACG,MAAM,CAACC,QAAQ;UAC7BC,GAAG,EAAEL,QAAQ,CAACG,MAAM,CAACG;QACzB,CAAC;QACDjB,kBAAkB,CAACY,GAAG,CAAC;QACvBM,oBAAoB,CAACN,GAAG,CAAC;MAC7B,CAAC,EACDO,KAAK,IAAI;QACLC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CE,KAAK,CAAC,8FAA8F,CAAC;QACrG;QACArB,kBAAkB,CAAC;UAAEa,GAAG,EAAE,OAAO;UAAEG,GAAG,EAAE,CAAC;QAAQ,CAAC,CAAC,CAAC,CAAC;MACzD,CACJ,CAAC;IACL,CAAC,MAAM;MACHK,KAAK,CAAC,+CAA+C,CAAC;IAC1D;EACJ,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMH,oBAAoB,GAAGvC,WAAW,CAAE2C,QAAQ,IAAK;IACnD,MAAMC,gBAAgB,GAAG,CACrB;MAAEC,IAAI,EAAE,WAAW;MAAEF,QAAQ,EAAE;QAAET,GAAG,EAAES,QAAQ,CAACT,GAAG,GAAG,IAAI;QAAEG,GAAG,EAAEM,QAAQ,CAACN,GAAG,GAAG;MAAK;IAAE,CAAC,EACvF;MAAEQ,IAAI,EAAE,WAAW;MAAEF,QAAQ,EAAE;QAAET,GAAG,EAAES,QAAQ,CAACT,GAAG,GAAG,IAAI;QAAEG,GAAG,EAAEM,QAAQ,CAACN,GAAG,GAAG;MAAK;IAAE;IACtF;IAAA,CACH;IACD,MAAMS,eAAe,GAAGF,gBAAgB,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACpD,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACT,QAAQ,CAACT,GAAG,GAAGc,CAAC,CAACL,QAAQ,CAACT,GAAG,EAAES,QAAQ,CAACN,GAAG,GAAGW,CAAC,CAACL,QAAQ,CAACN,GAAG,CAAC;MACtF,MAAMgB,KAAK,GAAGF,IAAI,CAACC,KAAK,CAACT,QAAQ,CAACT,GAAG,GAAGe,CAAC,CAACN,QAAQ,CAACT,GAAG,EAAES,QAAQ,CAACN,GAAG,GAAGY,CAAC,CAACN,QAAQ,CAACN,GAAG,CAAC;MACtF,OAAOa,KAAK,GAAGG,KAAK;IACxB,CAAC,CAAC;IACF9B,YAAY,CAACuB,eAAe,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,MAAM,GAAGtD,WAAW,CAAC,SAASuD,QAAQA,CAAC/B,GAAG,EAAE;IAC9CC,MAAM,CAACD,GAAG,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMgC,SAAS,GAAGxD,WAAW,CAAC,SAASuD,QAAQA,CAAC/B,GAAG,EAAE;IACjDC,MAAM,CAAC,IAAI,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIpB,OAAA;IAAKoD,KAAK,EAAEhD,WAAY;IAAAiD,QAAA,gBACpBrD,OAAA;MAAKoD,KAAK,EAAE7C,SAAU;MAAA8C,QAAA,gBAClBrD,OAAA;QAAAqD,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BzD,OAAA;QAAAqD,QAAA,EACKpC,SAAS,CAACE,GAAG,CAAC,CAACuC,OAAO,EAAEC,KAAK,kBAC1B3D,OAAA;UAAAqD,QAAA,gBACIrD,OAAA;YAAAqD,QAAA,EAASK,OAAO,CAAClB;UAAI;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,wBAAoB,EAACX,IAAI,CAACc,KAAK,CAACF,OAAO,CAACG,QAAQ,GAAG,IAAI,CAAC,EAAC,SAC5F;QAAA,GAFSF,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACNzD,OAAA;MAAAqD,QAAA,EACKhC,QAAQ,IAAIN,eAAe,gBACxBf,OAAA,CAACJ,SAAS;QACNkE,iBAAiB,EAAE7D,cAAe;QAClC8D,MAAM,EAAEhD,eAAgB;QACxBiD,IAAI,EAAE,KAAM;QACZf,MAAM,EAAEA,MAAO;QACfE,SAAS,EAAEA,SAAU;QAAAE,QAAA,EAEpBpC,SAAS,CAACE,GAAG,CAAC,CAACuC,OAAO,EAAEC,KAAK,kBAC1B3D,OAAA,CAACH,MAAM;UAAa8B,QAAQ,EAAE+B,OAAO,CAACpB,QAAS;UAAC2B,KAAK,EAAEP,OAAO,CAAClB;QAAK,GAAvDmB,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAoD,CACzE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,gBACZzD,OAAA;QAAAqD,QAAA,EAAK;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAA3C,EAAA,CArFKH,MAAM;EAAA,QAKab,cAAc;AAAA;AAAAoE,EAAA,GALjCvD,MAAM;AAuFZ,eAAeA,MAAM;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}